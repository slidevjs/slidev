{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$ref": "#/definitions/Headmatter",
  "definitions": {
    "Headmatter": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the slides"
        },
        "titleTemplate": {
          "type": "string",
          "description": "String template to compose title",
          "default": "%s - Slidev"
        },
        "theme": {
          "type": "string",
          "description": "Theme to use for the slides",
          "default": "default"
        },
        "addons": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Slidev addons",
          "default": []
        },
        "remoteAssets": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "const": "dev"
            },
            {
              "type": "string",
              "const": "build"
            }
          ],
          "description": "Download remote assets in local using vite-plugin-remote-assets",
          "default": false
        },
        "download": {
          "type": [
            "boolean",
            "string"
          ],
          "description": "Show a download button in the SPA build, could also be a link to custom pdf",
          "default": false
        },
        "codeCopy": {
          "type": "boolean",
          "description": "Show a copy button in code blocks",
          "default": true
        },
        "info": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Information shows on the built SPA Can be a markdown string",
          "default": false
        },
        "highlighter": {
          "type": "string",
          "enum": [
            "shiki",
            "prism"
          ],
          "description": "Prefer highlighter",
          "default": "shiki"
        },
        "twoslash": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "const": "dev"
            },
            {
              "type": "string",
              "const": "build"
            }
          ],
          "description": "Enable Twoslash",
          "default": true
        },
        "lineNumbers": {
          "type": "boolean",
          "description": "Show line numbers in code blocks",
          "default": false
        },
        "colorSchema": {
          "type": "string",
          "enum": [
            "dark",
            "light",
            "all",
            "auto"
          ],
          "description": "Force slides color schema",
          "default": "auto"
        },
        "routerMode": {
          "type": "string",
          "enum": [
            "hash",
            "history"
          ],
          "description": "Router mode for vue-router",
          "default": "history"
        },
        "aspectRatio": {
          "type": "number",
          "description": "Aspect ratio for slides should be like `16/9` or `1:1`",
          "default": "16/9"
        },
        "canvasWidth": {
          "type": "number",
          "description": "The actual width for slides canvas. unit in px.",
          "default": "980"
        },
        "selectable": {
          "type": "boolean",
          "description": "Controls whether texts in slides are selectable",
          "default": true
        },
        "themeConfig": {
          "$ref": "#/definitions/SlidevThemeConfig",
          "description": "Configure for themes, will inject intro root styles as `--slidev-theme-x` for attribute `x`\n\nThis allows themes to have customization options in frontmatter Refer to themes' document for options avaliable",
          "default": {}
        },
        "fonts": {
          "$ref": "#/definitions/ResolvedFontOptions",
          "description": "Configure fonts for the slides and app",
          "default": {}
        },
        "favicon": {
          "type": "string",
          "description": "Configure the icon for app",
          "default": "https://cdn.jsdelivr.net/gh/slidevjs/slidev/assets/favicon.png"
        },
        "drawings": {
          "$ref": "#/definitions/ResolvedDrawingsOptions",
          "description": "Options for drawings",
          "default": {}
        },
        "plantUmlServer": {
          "type": "string",
          "description": "URL of PlantUML server used to render diagrams",
          "default": "https://www.plantuml.com/plantuml"
        },
        "record": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "const": "dev"
            },
            {
              "type": "string",
              "const": "build"
            }
          ],
          "description": "Enable slides recording",
          "default": "dev"
        },
        "remote": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Expose the server to inbound requests (listen to `0.0.0.0`)\n\nPass a string to set the password for accessing presenter mode.",
          "default": false
        },
        "css": {
          "type": "string",
          "const": "unocss",
          "description": "Engine for Atomic CSS",
          "deprecated": true,
          "default": "unocss"
        },
        "presenter": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "const": "dev"
            },
            {
              "type": "string",
              "const": "build"
            }
          ],
          "description": "Enable presenter mode",
          "default": true
        },
        "htmlAttrs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Attributes to apply to the HTML element",
          "default": {}
        },
        "transition": {
          "anyOf": [
            {
              "$ref": "#/definitions/BuiltinSlideTransition"
            },
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/TransitionGroupProps"
            },
            {
              "type": "null"
            }
          ],
          "description": "Page transition, powered by Vue's <TransitionGroup/>\n\nBuilt-in transitions:\n- fade\n- fade-out\n- slide-left\n- slide-right\n- slide-up\n- slide-down"
        },
        "mdc": {
          "type": "boolean",
          "description": "Suppport MDC syntax",
          "default": false
        },
        "editor": {
          "type": "boolean",
          "description": "Enable built-in editor",
          "default": true
        },
        "contextMenu": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "const": "dev"
            },
            {
              "type": "string",
              "const": "build"
            },
            {
              "type": "null"
            }
          ],
          "description": "Enable context menu",
          "default": true
        },
        "wakeLock": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "const": "dev"
            },
            {
              "type": "string",
              "const": "build"
            }
          ],
          "description": "Enable wake lock"
        },
        "export": {
          "$ref": "#/definitions/ResolvedExportOptions",
          "description": "Options for export",
          "default": {}
        },
        "exportFilename": {
          "type": [
            "string",
            "null"
          ],
          "description": "Force the filename used when exporting the presentation. The extension, e.g. .pdf, gets automatically added.",
          "default": ""
        },
        "monaco": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "const": "dev"
            },
            {
              "type": "string",
              "const": "build"
            }
          ],
          "description": "Enable Monaco",
          "default": true
        },
        "monacoTypesSource": {
          "type": "string",
          "enum": [
            "cdn",
            "local",
            "none"
          ],
          "description": "Where to load monaco types from\n\n- `cdn` - load from CDN with `@typescript/ata`\n- `local` - load from local node_modules",
          "default": "local"
        },
        "monacoTypesAdditionalPackages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Additional node packages to load as monaco types",
          "default": []
        },
        "monacoTypesIgnorePackages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Packages to ignore when loading monaco types",
          "default": []
        },
        "monacoRunAdditionalDeps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Additional local modules to load as dependencies of monaco runnable",
          "default": []
        }
      }
    },
    "SlidevThemeConfig": {
      "type": "object",
      "additionalProperties": {
        "type": [
          "string",
          "number"
        ]
      }
    },
    "ResolvedFontOptions": {
      "type": "object",
      "properties": {
        "sans": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mono": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serif": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "weights": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "italic": {
          "type": "boolean"
        },
        "provider": {
          "type": "string",
          "enum": [
            "none",
            "google"
          ]
        },
        "webfonts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "local": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "sans",
        "mono",
        "serif",
        "weights",
        "italic",
        "provider",
        "webfonts",
        "local"
      ]
    },
    "ResolvedDrawingsOptions": {
      "type": "object",
      "properties": {
        "persist": {
          "type": "boolean",
          "enum": [
            false
          ]
        },
        "enabled": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "const": "dev"
            },
            {
              "type": "string",
              "const": "build"
            }
          ]
        },
        "presenterOnly": {
          "type": "boolean"
        },
        "syncAll": {
          "type": "boolean"
        }
      },
      "required": [
        "persist",
        "enabled",
        "presenterOnly",
        "syncAll"
      ]
    },
    "BuiltinSlideTransition": {
      "type": "string",
      "enum": [
        "slide-up",
        "slide-down",
        "slide-left",
        "slide-right",
        "fade",
        "zoom",
        "none"
      ]
    },
    "TransitionGroupProps": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string"
        },
        "moveClass": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "transition",
            "animation"
          ]
        },
        "css": {
          "type": "boolean"
        },
        "duration": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "object",
              "properties": {
                "enter": {
                  "type": "number"
                },
                "leave": {
                  "type": "number"
                }
              },
              "required": [
                "enter",
                "leave"
              ]
            }
          ]
        },
        "enterFromClass": {
          "type": "string"
        },
        "enterActiveClass": {
          "type": "string"
        },
        "enterToClass": {
          "type": "string"
        },
        "appearFromClass": {
          "type": "string"
        },
        "appearActiveClass": {
          "type": "string"
        },
        "appearToClass": {
          "type": "string"
        },
        "leaveFromClass": {
          "type": "string"
        },
        "leaveActiveClass": {
          "type": "string"
        },
        "leaveToClass": {
          "type": "string"
        },
        "appear": {},
        "persisted": {},
        "onBeforeEnter": {},
        "onEnter": {},
        "onAfterEnter": {},
        "onEnterCancelled": {},
        "onBeforeLeave": {},
        "onLeave": {},
        "onAfterLeave": {},
        "onLeaveCancelled": {},
        "onBeforeAppear": {},
        "onAppear": {},
        "onAfterAppear": {},
        "onAppearCancelled": {}
      },
      "required": [
        "appear",
        "onAfterAppear",
        "onAfterEnter",
        "onAfterLeave",
        "onAppear",
        "onAppearCancelled",
        "onBeforeAppear",
        "onBeforeEnter",
        "onBeforeLeave",
        "onEnter",
        "onEnterCancelled",
        "onLeave",
        "onLeaveCancelled",
        "persisted"
      ]
    },
    "ResolvedExportOptions": {
      "type": "object",
      "properties": {
        "output": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "timeout": {
          "type": "number"
        },
        "wait": {
          "type": "number"
        },
        "wait-until": {
          "type": "string"
        },
        "range": {
          "type": "string"
        },
        "dark": {
          "type": "boolean"
        },
        "with-clicks": {
          "type": "boolean"
        },
        "executable-path": {
          "type": "string"
        },
        "with-toc": {
          "type": "boolean"
        },
        "per-slide": {
          "type": "boolean"
        },
        "scale": {
          "type": "number"
        },
        "withClicks": {
          "type": "boolean"
        },
        "executablePath": {
          "type": "string"
        },
        "withToc": {
          "type": "boolean"
        }
      }
    }
  }
}
